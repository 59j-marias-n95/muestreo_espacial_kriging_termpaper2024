install.packages("geoR")
#install.packages("geoR")
library(geoR)
produccion98 <- as. geodata(soja98, coords.col = 1:2, data.col = "PH")
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(prod98, max.dist = 50)
variograma <- variog(produccion98, max.dist = 50)
plot(vario, pch = 19, cex = 1)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(vario)
fitted <- variofit(variograma)
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- 2*variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 100)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 20)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 100)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
variograma <- variog(produccion98, max.dist = 200)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
View(produccion98)
View(fitted)
View(fitted)
View(produccion98)
View(produccion98)
View(variograma)
View(variograma)
view(soja98)
View(soja98)
size(soja98)
Size(soja98)
length(soja98)
length(soja98(:, 1))
length(soja98(, 1))
length(soja98[, 1])
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 300)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
variograma <- variog(produccion98, max.dist = 500)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 1000)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 256)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(produccion98, max.dist = 256)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 250)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 5)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(produccion98, max.dist = 5)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
#install.packages("geoR")
library(geoR)
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
G <- cbind(c(5.1, 0.3, 1), c(0.3, 5.1, 1), c(1, 1, 0))
G
library(matrixStats)
G <- cbind(c(5.1, 0.3, 1), c(0.3, 5.1, 1), c(1, 1, 0))
as.matrix(G^-1)
#library(matrixStats)
G <- cbind(c(5.1, 0.3, 1), c(0.3, 5.1, 1), c(1, 1, 0))
Ginv <- as.matrix(G^-1)
h <- c(3.1, 0.4, 1)
h <- as.matrix(c(3.1, 0.4, 1))
h
f <- Ginv*h
f <- product(Ginv, h)
f
f <- product(Ginv*h)
f <- product(Ginv, h)
f
f <- product(h, Ginv)
f
f <- product(Ginv, h, false)
f
f <- product(Ginv, h, FALSE)
f
f <- product(Ginv, h, TRUE)
f
f <- solve(Ginv, h)
f
f <- solve(G, h)
f
G <- cbind(c(5.1, 0.3, 1), c(0.3, 5.1, 1), c(1, 1, 0))
h <- as.matrix(c(3.1, 0.4, 1))
f <- solve(G, h)
G <- cbind(c(5.1, 0.3, 1), c(0.3, 5.1, 1), c(1, 1, 0))
h <- c(3.1, 0.4, 1)
f <- solve(G, h)
f
G <- cbind(c(5.1, 0.3, 1), c(0.3, 5.1, 1), c(1, 1, 0))
h <- c(3.1, 0.4, 1)
f <- solve(G, h)
f
y <- c(5.526, 1.417)
yhat_0 <- f(1:2)*y
yhat_0 <- f[1:2]*y
yhat_0 <- sum(f[1:2]*y)
yhat_0
G <- cbind(c(5.1, 0.3, 1), c(0.3, 5.1, 1), c(1, 1, 0))
h <- c(3.1, 0.4, 1)
f <- solve(G, h)
y <- c(5.526, 1.417)
yhat_0 <- sum(f[1:2]*y)
yhat_0
f <- round(solve(G, h), 3)
y <- c(5.526, 1.417)
yhat_0 <- sum(f[1:2]*y)
yhat_0
f <- round(solve(G, h), 2)
y <- c(5.526, 1.417)
yhat_0 <- sum(f[1:2]*y)
yhat_0
MSPE <- G[1,1] - sum(f(1:3)*G(1:3,1))
MSPE <- G[1,1] - sum(f[1:3]*G[1:3,1])
MSPE
MSPE <- G[1,1] - sum(f[1:3]*h[1:3])
MSPE
MSE <- sqrt(MSPE)
MSE
MSPE <- round(G[1,1] - sum(f[1:3]*h[1:3]), 2)
MSPE
MSE <- sqrt(MSPE)
MSE
MSE <- round(sqrt(MSPE), 2)
MSE
MSE <- round(sqrt(MSPE), 1)
MSE
MSPE <- round(G[1,1] - sum(f[1:3]*h[1:3]), 1)
MSPE
MSE <- round(sqrt(MSPE), 1)
MSE
#Vector de capturas en las ubicaciones 1 y 2
y <- c(5.526, 1.417)
#Matriz de covarianzas entre sitios de la muestra
Gamma <- cbind(c(0, 4.8, 1), c(4.8, 0, 1), c(1, 1, 0))
#Vector de covarianzas entre sitios de la muestra con el sitio
#de la prediccion
gamma <- c(2.0, 4.7, 1)
#Vector de coeficientes optimos y multiplicador de Lagrange
a <- round(solve(Gamma, gamma), 2)
#Prediccion de kriging en la localidad de interes
yhat_0 <- sum(a[1:2]*y)
#Varianza de kriging de la prediccion
MSPE <- round(Gamma[1,1] - sum(a[1:3]*gamma[1:3]), 1)
#Error medio de la prediccion
MSE <- round(sqrt(MSPE), 1)
#Vector de capturas en las ubicaciones 1 y 2
y <- c(5.526, 1.417)
#Matriz de covarianzas entre sitios de la muestra
Gamma <- cbind(c(0, 4.8, 1), c(4.8, 0, 1), c(1, 1, 0))
#Vector de covarianzas entre sitios de la muestra con el sitio
#de la prediccion
gamma <- c(2.0, 4.7, 1)
#Vector de coeficientes optimos y multiplicador de Lagrange
a <- round(solve(Gamma, gamma), 2)
#Prediccion de kriging en la localidad de interes
yhat_0 <- sum(a[1:2]*y)
#Varianza de kriging de la prediccion
MSPE <- round(sum(a[1:3]*gamma[1:3]), 1)
#Error medio de la prediccion
MSE <- round(sqrt(MSPE), 1)
#Prediccion de kriging en la localidad de interes
yhat_0 <- round(sum(a[1:2]*y), 3)
#Prediccion de kriging en la localidad de interes
yhat_0 <- round(sum(f[1:2]*y), 3)
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
#install.packages("geoR")
library(geoR)
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
View(fitted)
fitted
fitted
summary(fitted)
View(fitted)
fitted
#install.packages("geoR")
library(geoR)
prod98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
locat <- expand.grid(seq(min(soja98$X), max(soja98$X), 1 = 100),
#install.packages("geoR")
library(geoR)
prod98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
locat <- expand.grid(seq(min(soja98$X), max(soja98$X), 1=100),
locat <- expand.grid(seq(min(soja98$X), max(soja98$X), 1=100), seq(min(soja98$Y), max(soja98$Y), 1=100))
locat <- expand.grid(seq(min(soja98$X), max(soja98$X), l=100),
seq(min(soja98$Y), max(soja98$Y), l=100))
kc <- krige.conv(prod98, loc=locat, krige = krige.control(type.krige = "ok"), cov.pars=c(1,20)))
kc <- krige.conv(prod98, loc=locat, krige = krige.control(type.krige = "ok", cov.pars=c(1,20)))
image(kc, col=gray((5:50)/50), axes = T)
contour(kc, axes = T, add = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
#install.packages("geoR")
library(geoR)
prod98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
locat <- expand.grid(seq(min(soja98$X), max(soja98$X), l=100),
seq(min(soja98$Y), max(soja98$Y), l=100))
kc <- krige.conv(prod98, loc=locat, krige = krige.control(type.krige = "ok", cov.pars=c(1,20)))
image(kc, col=gray((5:50)/50), axes = T)
contour(kc, axes = T, add = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
image(kc, col=gray((5:50)/50), axes = T)
contour(kc, axes = T, add = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
contour(kc, axes = T, add = T)
contour(kc, axes = T, add = T)
image(kc, col=gray((5:50)/50), axes = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
contour(kc, axes = T, add = T)
kc <- krige.conv(prod98, loc=locat, krige = krige.control(type.krige = "ok", cov.pars=c(1,20)))
image(kc, col=gray((5:50)/50), axes = T)
contour(kc, axes = T, add = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
image(kc, col=gray((5:50)/50), axes = T) contour(kc, axes = T, add = T) points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
image(kc, col=gray((5:50)/50), axes = T); contour(kc, axes = T, add = T) points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
image(kc, col=gray((5:50)/50), axes = T); contour(kc, axes = T, add = T); points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
kc <- krige.conv(prod98, loc=locat, krige = krige.control(type.krige = "ok", cov.pars=c(1,20)))
image(kc, col=gray((5:50)/50), axes = T); contour(kc, axes = T, add = T); points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
#install.packages("geoR")
library(geoR)
prod98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
locat <- expand.grid(seq(min(soja98$X), max(soja98$X), l=100),
seq(min(soja98$Y), max(soja98$Y), l=100))
kc <- krige.conv(prod98, loc=locat, krige = krige.control(type.krige = "ok", cov.pars=c(1,20)))
image(kc, col=gray((5:50)/50), axes = T)
help("contour")
image(kc, col=gray((1:50)/50), axes = T)
image(kc, col=gray((15:50)/50), axes = T)
image(kc, col=gray((10:50)/50), axes = T)
image(kc, col=gray((10:50)/10), axes = T)
image(kc, col=gray((5:50)/10), axes = T)
image(kc, col=gray((5:50)/50), axes = T)
image(kc, col=gray((5:50)/100), axes = T)
image(kc, col=gray((5:50)/55), axes = T)
contour(kc, axes = T, add = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
contour(kc, axes = T, add = F)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = F)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
contour(kc, axes = T, add = F)
kc <- krige.conv(prod98, loc=locat, krige = krige.control(type.krige = "ok", cov.pars=c(1,20)))
image(kc, col=gray((5:50)/55), axes = T)
contour(kc, axes = T, add = F)
contour(kc, axes = T, add = T)
image(kc, col=gray((5:50)/55), axes = T)
contour(kc, axes = T, add = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
image(kc, col=green((5:50)/55), axes = T)
image(kc, col=blue((5:50)/55), axes = T)
image(kc, col=cyan((5:50)/55), axes = T)
image(kc, col=gray((5:50)/55), axes = T)
contour(kc, axes = T, add = T)
points(prod98, cex.min = 0.1, cex.max = 1.5, pch = 19, add = T)
#install.packages("geoR")
library(geoR)
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
fitted <- variofit(variograma)
lines(fitted)
fitted
summary(fitted)
help("geoR")
??geoR
#install.packages("geoR")
library(geoR)
#asignacion de la data de interes
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
#la funcion variog da el variograma para una distancia maxima de 50 unidades
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
#curva del ajusted para el variograma
fitted <- variofit(variograma)
lines(fitted)
fitted
summary.variofit
summary(variofit)
summary(fitted)
#install.packages("geoR")
library(geoR)
#asignacion de la data de interes
produccion98 <- as.geodata(soja98, coords.col = 1:2, data.col = "PH")
#la funcion variog da el variograma para una distancia maxima de 50 unidades
variograma <- variog(produccion98, max.dist = 50)
plot(variograma, pch = 19, cex = 1)
#curva del ajusted para el variograma
fitted <- variofit(variograma)
lines(fitted)
summary(fitted)
